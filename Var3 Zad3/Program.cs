using System;
using System.Collections.Generic;

class Автор
{
    public string Имя { get; set; } // Имя автора
    public string Фамилия { get; set; } // Фамилия автора
    public int ГодРождения { get; set; } // Год рождения автора

    public Автор(string имя, string фамилия, int годРождения)
    {
        Имя = имя;
        Фамилия = фамилия;
        ГодРождения = годРождения;
    }

    public override string ToString()
    {
        return $"{Имя} {Фамилия} ({ГодРождения} год)"; // Возвращает строку с информацией об авторе
    }
}

class Книга
{
    public string Название { get; set; } // Название книги
    public Автор Автор { get; set; } // Автор книги
    public int ГодИздания { get; set; } // Год издания книги

    public Книга(string название, Автор автор, int годИздания)
    {
        Название = название;
        Автор = автор;
        ГодИздания = годИздания;
    }

    public override string ToString()
    {
        return $"{Название} (автор: {Автор}, год издания: {ГодИздания})"; // Возвращает строку с информацией о книге
    }
}

class Библиотека
{
    private List<Книга> книги = new List<Книга>(); // Список книг в библиотеке

    public void ДобавитьКнигу(Книга книга)
    {
        книги.Add(книга); // Добавляет книгу в библиотеку
    }

    public void УдалитьКнигу(Книга книга)
    {
        книги.Remove(книга); // Удаляет книгу из библиотеки
    }

    public void ИзменитьКнигу(Книга стараяКнига, Книга новаяКнига)
    {
        int index = книги.IndexOf(стараяКнига);
        if (index != -1)
        {
            книги[index] = новаяКнига; // Заменяет старую книгу на новую
        }
    }

    public void ДобавитьАвтора(Автор автор)
    {
        // Добавление автора в библиотеку, если его еще нет
        if (!книги.Exists(книга => книга.Автор.Equals(автор)))
        {
            книги.Add(new Книга("Книга без названия", автор, 0));
        }
    }

    public void УдалитьАвтора(Автор автор)
    {
        книги.RemoveAll(книга => книга.Автор.Equals(автор)); // Удаляет все книги автора из библиотеки
    }

    public void ИзменитьАвтора(Автор старыйАвтор, Автор новыйАвтор)
    {
        foreach (var книга in книги)
        {
            if (книга.Автор.Equals(старыйАвтор))
            {
                книга.Автор = новыйАвтор; // Заменяет старого автора на нового во всех книгах
            }
        }
    }

    public void ИзменитьГодИздания(Книга книга, int новыйГодИздания)
    {
        int index = книги.IndexOf(книга);
        if (index != -1)
        {
            книги[index].ГодИздания = новыйГодИздания; // Изменяет год издания книги
        }
    }

    public List<Книга> НайтиКнигиПоАвтору(Автор автор)
    {
        return книги.FindAll(книга => книга.Автор.Equals(автор)); // Возвращает список книг по автору
    }

    public List<Книга> НайтиКнигиПоГодуИздания(int год)
    {
        return книги.FindAll(книга => книга.ГодИздания == год); // Возвращает список книг по году издания
    }
}

class Program
{
    static void Main(string[] args)
    {
        Автор автор1 = new Автор("Иван", "Иванов", 1980);
        Автор автор2 = new Автор("Мария", "Петрова", 1975);

        Книга книга1 = new Книга("Книга1", автор1, 2000);
        Книга книга2 = new Книга("Книга2", автор1, 2005);
        Книга книга3 = new Книга("Книга3", автор2, 2010);

        Библиотека библиотека = new Библиотека();
        библиотека.ДобавитьКнигу(книга1);
        библиотека.ДобавитьКнигу(книга2);
        библиотека.ДобавитьКнигу(книга3);

        Console.WriteLine("Книги Ивана Иванова:");
        List<Книга> книгиПоАвтору = библиотека.НайтиКнигиПоАвтору(автор1);
        foreach (var книга in книгиПоАвтору)
        {
            Console.WriteLine(книга);
        }

        Console.WriteLine("\nКниги, опубликованные в 2005 году:");
        List<Книга> книгиПоГодуИздания = библиотека.НайтиКнигиПоГодуИздания(2005);
        foreach (var книга in книгиПоГодуИздания)
        {
            Console.WriteLine(книга);
        }

        // Пример изменения информации о книге
        Книга новаяКнига2 = new Книга("Новая Книга2", автор1, 2020);
        библиотека.ИзменитьКнигу(книга2, новаяКнига2);

        Console.WriteLine("\nИзмененные книги:");
        foreach (var книга in библиотека.НайтиКнигиПоАвтору(автор1))
        {
            Console.WriteLine(книга);
        }
    }
}
